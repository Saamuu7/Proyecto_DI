1. Introducción del Proyecto
Este proyecto consiste en un sistema de gestión de estudiantes para un instituto. La aplicación permite añadir, eliminar, editar y mostrar estudiantes, así como gestionar su información en una base de datos MySQL. La base de datos utilizada se llama 'proyecto_di' y contiene tres tablas: alumnos, dam, y smr.

---------------------------------------------------------------------------------------------------------------------------------------------
2. Estructura del Proyecto
El proyecto tiene la siguiente estructura de archivos:

main.py: Archivo principal que ejecuta la aplicación y gestiona la interacción con el usuario.
db_connection.py: Contiene la clase DBConnection que se encarga de la conexión a la base de datos y de las operaciones básicas (añadir, eliminar, editar y mostrar estudiantes).
student_manager.py: Contiene la clase StudentManager, que gestiona la información de los estudiantes y sus operaciones.
git_manager.py: Contiene la función para subir el proyecto a GitHub.

---------------------------------------------------------------------------------------------------------------------------------------------
3. Pasos para Conectarse a la Base de Datos
Para conectarme a la base de datos MySQL 'proyecto_di', he seguido los siguientes pasos:

Instalé el paquete mysql-connector-python utilizando el comando pip install mysql-connector-python.
En el archivo db_connection.py, configuré los parámetros de conexión (usuario, contraseña, host y nombre de la base de datos).
Utilicé la clase DBConnection para establecer la conexión y realizar operaciones en la base de datos.

---------------------------------------------------------------------------------------------------------------------------------------------
4. Comandos Básicos de MySQL Usados
CREATE DATABASE proyecto_di: Crea una nueva base de datos llamada 'proyecto_di'.
CREATE TABLE alumnos: Crea una tabla llamada 'alumnos' con los campos id, nombre, apellido, curso, edad, telefono, nota, nota_corte.
CREATE TABLE dam: Crea una tabla llamada 'dam' con los campos id, nombre, apellido, nota.
CREATE TABLE smr: Crea una tabla llamada 'smr' con los campos id, nombre, apellido, nota.
INSERT INTO alumnos: Inserta un nuevo registro en la tabla 'alumnos'.
SELECT * FROM alumnos: Muestra todos los registros de la tabla 'alumnos'.
UPDATE alumnos SET: Actualiza un registro existente en la tabla 'alumnos'.
DELETE FROM alumnos: Elimina un registro de la tabla 'alumnos'.

---------------------------------------------------------------------------------------------------------------------------------------------
5. Comandos para Crear un Repositorio y Subir el Proyecto
Para crear un nuevo repositorio y subir el proyecto a GitHub, he seguido estos pasos:
- Inicializar el repositorio: 
    ```
    git init
    ```
- Añadir todos los archivos al repositorio:
    ```
    git add .
    ```
- Hacer un commit con un mensaje:
    ```
    git commit -m "Initial commit"
    ```
- Crear un nuevo repositorio en GitHub desde la interfaz web.
- Enlazar el repositorio local con el remoto:
    ```
    git remote add origin <URL_del_repositorio>
    ```
- Subir los cambios al repositorio remoto:
    ```
    git push -u origin master
    ```

